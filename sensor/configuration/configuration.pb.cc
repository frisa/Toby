// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: configuration.proto
// Protobuf C++ Version: 5.26.1

#include "configuration.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr SensorConfiguration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        port_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initlatitude_{0},
        initlongitude_{0},
        type_{static_cast< ::SensorConfiguration_DeviceType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorConfiguration::SensorConfiguration(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorConfigurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorConfigurationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorConfigurationDefaultTypeInternal() {}
  union {
    SensorConfiguration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorConfigurationDefaultTypeInternal _SensorConfiguration_default_instance_;
static ::_pb::Metadata file_level_metadata_configuration_2eproto[1];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_configuration_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_configuration_2eproto = nullptr;
const ::uint32_t
    TableStruct_configuration_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SensorConfiguration, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SensorConfiguration, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::SensorConfiguration, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::SensorConfiguration, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::SensorConfiguration, _impl_.initlatitude_),
        PROTOBUF_FIELD_OFFSET(::SensorConfiguration, _impl_.initlongitude_),
        PROTOBUF_FIELD_OFFSET(::SensorConfiguration, _impl_.type_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::SensorConfiguration)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_SensorConfiguration_default_instance_._instance,
};
const char descriptor_table_protodef_configuration_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023configuration.proto\"\275\001\n\023SensorConfigur"
    "ation\022\014\n\004name\030\001 \001(\t\022\n\n\002ip\030\002 \001(\t\022\014\n\004port\030"
    "\003 \001(\t\022\024\n\014initLatitude\030\004 \001(\005\022\025\n\rinitLongi"
    "tude\030\005 \001(\005\022-\n\004type\030\006 \001(\0162\037.SensorConfigu"
    "ration.DeviceType\"\"\n\nDeviceType\022\t\n\005GNSS0"
    "\020\000\022\t\n\005GNSS1\020\001b\006proto3"
};
static ::absl::once_flag descriptor_table_configuration_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_configuration_2eproto = {
    false,
    false,
    221,
    descriptor_table_protodef_configuration_2eproto,
    "configuration.proto",
    &descriptor_table_configuration_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_configuration_2eproto::offsets,
    file_level_metadata_configuration_2eproto,
    file_level_enum_descriptors_configuration_2eproto,
    file_level_service_descriptors_configuration_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_configuration_2eproto_getter() {
  return &descriptor_table_configuration_2eproto;
}
const ::google::protobuf::EnumDescriptor* SensorConfiguration_DeviceType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_configuration_2eproto);
  return file_level_enum_descriptors_configuration_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t SensorConfiguration_DeviceType_internal_data_[] = {
    131072u, 0u, };
bool SensorConfiguration_DeviceType_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SensorConfiguration_DeviceType SensorConfiguration::GNSS0;
constexpr SensorConfiguration_DeviceType SensorConfiguration::GNSS1;
constexpr SensorConfiguration_DeviceType SensorConfiguration::DeviceType_MIN;
constexpr SensorConfiguration_DeviceType SensorConfiguration::DeviceType_MAX;
constexpr int SensorConfiguration::DeviceType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class SensorConfiguration::_Internal {
 public:
};

SensorConfiguration::SensorConfiguration(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SensorConfiguration)
}
inline PROTOBUF_NDEBUG_INLINE SensorConfiguration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        ip_(arena, from.ip_),
        port_(arena, from.port_),
        _cached_size_{0} {}

SensorConfiguration::SensorConfiguration(
    ::google::protobuf::Arena* arena,
    const SensorConfiguration& from)
    : ::google::protobuf::Message(arena) {
  SensorConfiguration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, initlatitude_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, initlatitude_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, initlatitude_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:SensorConfiguration)
}
inline PROTOBUF_NDEBUG_INLINE SensorConfiguration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        ip_(arena),
        port_(arena),
        _cached_size_{0} {}

inline void SensorConfiguration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, initlatitude_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, initlatitude_) +
               sizeof(Impl_::type_));
}
SensorConfiguration::~SensorConfiguration() {
  // @@protoc_insertion_point(destructor:SensorConfiguration)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorConfiguration::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.ip_.Destroy();
  _impl_.port_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SensorConfiguration::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(SensorConfiguration, _impl_._cached_size_),
              false,
          },
          &SensorConfiguration::MergeImpl,
          &SensorConfiguration::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void SensorConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:SensorConfiguration)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.ip_.ClearToEmpty();
  _impl_.port_.ClearToEmpty();
  ::memset(&_impl_.initlatitude_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.initlatitude_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorConfiguration::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 38, 2> SensorConfiguration::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorConfiguration_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SensorConfiguration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorConfiguration, _impl_.name_)}},
    // string ip = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SensorConfiguration, _impl_.ip_)}},
    // string port = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SensorConfiguration, _impl_.port_)}},
    // int32 initLatitude = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorConfiguration, _impl_.initlatitude_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SensorConfiguration, _impl_.initlatitude_)}},
    // int32 initLongitude = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorConfiguration, _impl_.initlongitude_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SensorConfiguration, _impl_.initlongitude_)}},
    // .SensorConfiguration.DeviceType type = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorConfiguration, _impl_.type_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SensorConfiguration, _impl_.type_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(SensorConfiguration, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ip = 2;
    {PROTOBUF_FIELD_OFFSET(SensorConfiguration, _impl_.ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string port = 3;
    {PROTOBUF_FIELD_OFFSET(SensorConfiguration, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 initLatitude = 4;
    {PROTOBUF_FIELD_OFFSET(SensorConfiguration, _impl_.initlatitude_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 initLongitude = 5;
    {PROTOBUF_FIELD_OFFSET(SensorConfiguration, _impl_.initlongitude_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .SensorConfiguration.DeviceType type = 6;
    {PROTOBUF_FIELD_OFFSET(SensorConfiguration, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\23\4\2\4\0\0\0\0"
    "SensorConfiguration"
    "name"
    "ip"
    "port"
  }},
};

::uint8_t* SensorConfiguration::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SensorConfiguration)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SensorConfiguration.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string ip = 2;
  if (!this->_internal_ip().empty()) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SensorConfiguration.ip");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string port = 3;
  if (!this->_internal_port().empty()) {
    const std::string& _s = this->_internal_port();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SensorConfiguration.port");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // int32 initLatitude = 4;
  if (this->_internal_initlatitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_initlatitude(), target);
  }

  // int32 initLongitude = 5;
  if (this->_internal_initlongitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_initlongitude(), target);
  }

  // .SensorConfiguration.DeviceType type = 6;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SensorConfiguration)
  return target;
}

::size_t SensorConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SensorConfiguration)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string ip = 2;
  if (!this->_internal_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip());
  }

  // string port = 3;
  if (!this->_internal_port().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_port());
  }

  // int32 initLatitude = 4;
  if (this->_internal_initlatitude() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_initlatitude());
  }

  // int32 initLongitude = 5;
  if (this->_internal_initlongitude() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_initlongitude());
  }

  // .SensorConfiguration.DeviceType type = 6;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SensorConfiguration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorConfiguration*>(&to_msg);
  auto& from = static_cast<const SensorConfiguration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SensorConfiguration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (!from._internal_port().empty()) {
    _this->_internal_set_port(from._internal_port());
  }
  if (from._internal_initlatitude() != 0) {
    _this->_impl_.initlatitude_ = from._impl_.initlatitude_;
  }
  if (from._internal_initlongitude() != 0) {
    _this->_impl_.initlongitude_ = from._impl_.initlongitude_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorConfiguration::CopyFrom(const SensorConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SensorConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorConfiguration::IsInitialized() const {
  return true;
}

void SensorConfiguration::InternalSwap(SensorConfiguration* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.port_, &other->_impl_.port_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorConfiguration, _impl_.type_)
      + sizeof(SensorConfiguration::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(SensorConfiguration, _impl_.initlatitude_)>(
          reinterpret_cast<char*>(&_impl_.initlatitude_),
          reinterpret_cast<char*>(&other->_impl_.initlatitude_));
}

::google::protobuf::Metadata SensorConfiguration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_configuration_2eproto_getter,
                                   &descriptor_table_configuration_2eproto_once,
                                   file_level_metadata_configuration_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_configuration_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
